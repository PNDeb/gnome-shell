From: Ray Strode <rstrode@redhat.com>
Date: Fri, 15 Dec 2017 10:05:34 -0500
Subject: background: don't leak wall clock when background changes

The background code allocates a GnomeWallClock when its first created,
but neglects to drop a reference to that clock at destroy time.
The undestroyed clocks lead to a timerfd leak that eventually prevents
the shell from functioning.

Bug: https://bugzilla.gnome.org/show_bug.cgi?id=791655
Origin: upstream, 3.26.3, commit:983a7ca8f5682f9550fdb0b2cd32b36fa1c3b997
---
 js/ui/background.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/js/ui/background.js b/js/ui/background.js
index 1c2b83b..3ea7900 100644
--- a/js/ui/background.js
+++ b/js/ui/background.js
@@ -289,6 +289,8 @@ var Background = new Lang.Class({
             this._clock.disconnect(this._timezoneChangedId);
         this._timezoneChangedId = 0;
 
+        this._clock = null;
+
         if (this._prepareForSleepId != 0)
             LoginManager.getLoginManager().disconnect(this._prepareForSleepId);
         this._prepareForSleepId = 0;
