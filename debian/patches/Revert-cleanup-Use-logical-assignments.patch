From: =?utf-8?b?Ik1hcmNvIFRyZXZpc2FuIChUcmV2acOxbyki?= <mail@3v1n0.net>
Date: Fri, 18 Feb 2022 05:32:49 +0100
Subject: Revert "cleanup: Use logical assignments"

This reverts commit b54111ef886fcedc03818294b574509653cb84ca.
---
 js/misc/extensionUtils.js        | 4 ++--
 js/misc/util.js                  | 2 +-
 js/ui/calendar.js                | 4 ++--
 js/ui/components/networkAgent.js | 4 ++--
 js/ui/messageTray.js             | 2 +-
 js/ui/panel.js                   | 2 +-
 js/ui/shellMountOperation.js     | 2 +-
 js/ui/status/network.js          | 2 +-
 8 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/js/misc/extensionUtils.js b/js/misc/extensionUtils.js
index e497224..c86468e 100644
--- a/js/misc/extensionUtils.js
+++ b/js/misc/extensionUtils.js
@@ -104,7 +104,7 @@ function initTranslations(domain) {
     if (!extension)
         throw new Error('initTranslations() can only be called from extensions');
 
-    domain ||= extension.metadata['gettext-domain'];
+    domain = domain || extension.metadata['gettext-domain'];
 
     // Expect USER extensions to have a locale/ subfolder, otherwise assume a
     // SYSTEM extension that has been installed in the same prefix as the shell
@@ -188,7 +188,7 @@ function getSettings(schema) {
     if (!extension)
         throw new Error('getSettings() can only be called from extensions');
 
-    schema ||= extension.metadata['settings-schema'];
+    schema = schema || extension.metadata['settings-schema'];
 
     const GioSSS = Gio.SettingsSchemaSource;
 
diff --git a/js/misc/util.js b/js/misc/util.js
index 389fdde..9e0f1a8 100644
--- a/js/misc/util.js
+++ b/js/misc/util.js
@@ -336,7 +336,7 @@ function createTimeLabel(date, params) {
 
 function lowerBound(array, val, cmp) {
     let min, max, mid, v;
-    cmp ||= (a, b) => a - b;
+    cmp = cmp || ((a, b) => a - b);
 
     if (array.length == 0)
         return 0;
diff --git a/js/ui/calendar.js b/js/ui/calendar.js
index 7335c92..59d0770 100644
--- a/js/ui/calendar.js
+++ b/js/ui/calendar.js
@@ -307,7 +307,7 @@ class DBusEventSource extends EventSourceBase {
 
         let changed = false;
         for (const id of ids)
-            changed ||= this._events.delete(id);
+            changed = changed || this._events.delete(id);
 
         if (changed)
             this.emit('changed');
@@ -320,7 +320,7 @@ class DBusEventSource extends EventSourceBase {
         let changed = false;
         for (const id of this._events.keys()) {
             if (id.startsWith(sourceUid))
-                changed ||= this._events.delete(id);
+                changed = changed || this._events.delete(id);
         }
 
         if (changed)
diff --git a/js/ui/components/networkAgent.js b/js/ui/components/networkAgent.js
index a949a95..7e57f18 100644
--- a/js/ui/components/networkAgent.js
+++ b/js/ui/components/networkAgent.js
@@ -119,7 +119,7 @@ class NetworkSecretDialog extends ModalDialog.ModalDialog {
         let valid = true;
         for (let i = 0; i < this._content.secrets.length; i++) {
             let secret = this._content.secrets[i];
-            valid &&= secret.valid;
+            valid = valid && secret.valid;
         }
 
         this._okButton.button.reactive = valid;
@@ -130,7 +130,7 @@ class NetworkSecretDialog extends ModalDialog.ModalDialog {
         let valid = true;
         for (let i = 0; i < this._content.secrets.length; i++) {
             let secret = this._content.secrets[i];
-            valid &&= secret.valid;
+            valid = valid && secret.valid;
             if (secret.key !== null) {
                 if (this._settingName === 'vpn')
                     this._agent.add_vpn_secret(this._requestId, secret.key, secret.value);
diff --git a/js/ui/messageTray.js b/js/ui/messageTray.js
index 562d556..cf0ae43 100644
--- a/js/ui/messageTray.js
+++ b/js/ui/messageTray.js
@@ -1187,7 +1187,7 @@ var MessageTray = GObject.registerClass({
         // Filter out acknowledged notifications.
         let changed = false;
         this._notificationQueue = this._notificationQueue.filter(n => {
-            changed ||= n.acknowledged;
+            changed = changed || n.acknowledged;
             return !n.acknowledged;
         });
 
diff --git a/js/ui/panel.js b/js/ui/panel.js
index 78064f7..fdabb1d 100644
--- a/js/ui/panel.js
+++ b/js/ui/panel.js
@@ -761,7 +761,7 @@ class Panel extends St.Widget {
         if (!(indicator instanceof PanelMenu.Button))
             throw new TypeError('Status indicator must be an instance of PanelMenu.Button');
 
-        position ??= 0;
+        position = position || 0;
         let boxes = {
             left: this._leftBox,
             center: this._centerBox,
diff --git a/js/ui/shellMountOperation.js b/js/ui/shellMountOperation.js
index 0ef383d..9d4ce08 100644
--- a/js/ui/shellMountOperation.js
+++ b/js/ui/shellMountOperation.js
@@ -28,7 +28,7 @@ function _setButtonsForChoices(dialog, oldChoices, choices) {
     for (let idx = 0; idx < choices.length; idx++) {
         let button = idx;
 
-        buttonsChanged ||= oldChoices[idx] !== choices[idx];
+        buttonsChanged = buttonsChanged || oldChoices[idx] !== choices[idx];
 
         buttons.unshift({
             label: choices[idx],
diff --git a/js/ui/status/network.js b/js/ui/status/network.js
index bc129e4..706f67a 100644
--- a/js/ui/status/network.js
+++ b/js/ui/status/network.js
@@ -2111,7 +2111,7 @@ class Indicator extends PanelMenu.SystemIndicator {
         // NONE is also possible, with a connection configured to force no default route
         // (but in general we should only prompt a portal if we know there is a portal)
         if (GLib.getenv('GNOME_SHELL_CONNECTIVITY_TEST') != null)
-            isPortal ||= this._client.connectivity < NM.ConnectivityState.FULL;
+            isPortal = isPortal || this._client.connectivity < NM.ConnectivityState.FULL;
         if (!isPortal || Main.sessionMode.isGreeter)
             return;
 
